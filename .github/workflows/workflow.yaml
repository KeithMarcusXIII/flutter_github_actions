name: github_actions
on:
  push:
    branches:
      - master
      - develop
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment"
        type: environment
        required: true
      flutter-channel:
        description: "Flutter channel"
        type: choice
        default: stable
        required: false
        options:
          - master
          - beta
          - stable
      flutter-version:
        description: "Flutter version"
        type: string
        default: "3.3.2"
        required: false
      jdk-dist:
        description: "JDK distribution"
        required: false
        default: "adopt"
      jdk-version:
        description: "JDK version"
        required: false
        default: "11"
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      flutter-channel:
        required: false
        type: string
        default: "stable"
      flutter-version:
        required: false
        type: string
        default: "3.3.2"
      jdk-dist:
        required: false
        type: string
        default: "adopt"
      jdk-version:
        required: false
        type: string
        default: "11"

jobs:
  setup:
    strategy:
      fail-fast: true
      matrix:
        os: [self-hosted-ubuntu, self-hosted-macos]
    runs-on: ${{ matrix.os }}
    outputs:
      flutter-channel: ${{ steps.parse-var.outputs.flutter-channel }}
      flutter-version: ${{ steps.parse-var.outputs.flutter-version }}
      jdk-dist: ${{ steps.parse-var.outputs.jdk-dist }}
      jdk-version: ${{ steps.parse-var.outputs.jdk-version }}
    steps:
      - name: Print env
        run: echo "${{ toJSON(env) }}"
      - name: Print secrets
        run: echo "${{ toJSON(secrets) }}"
      - name: Checkout
        uses: actions/checkout@v3
      - id: parse-var
        name: Parse variables
        run: |
          flutter_channel="${{ inputs.flutter-channel || 'stable' }}"
          flutter_version="${{ inputs.flutter-version || '3.3.2' }}"
          jdk_dist="${{ inputs.jdk-dist || 'adopt' }}"
          jdk_version="${{ inputs.jdk-version || '11' }}"

          echo "::set-output name=flutter-channel::$flutter_channel"
          echo "::set-output name=flutter-version::$flutter_version"
          echo "::set-output name=jdk-dist::$jdk_dist"
          echo "::set-output name=jdk-version::$jdk_version"

          echo $flutter_channel
          echo $flutter_version
          echo $jdk_dist
          echo $jdk_version
        shell: bash
      - name: Print parse-var variables
        run: echo "${{ toJSON(steps.parse-var.outputs) }}"

  analyze:
    runs-on: self-hosted
    needs: setup
    steps:
      - name: Print setup outputs
        run: echo "${{ toJSON(needs.setup.outputs) }}"
      - id: flutter-sdk-setup
        name: Setup flutter sdk
        uses: ./.github/actions/setup-flutter
        with:
          flutter-channel: ${{ needs.setup.outputs.flutter-channel }}
          flutter-version: ${{ needs.setup.outputs.flutter-version }}
      - name: Check formatting
        # run: flutter format --set-exit-if-changed lib test
        run: flutter format lib test
      - name: Analyze
        run: flutter analyze lib test

  # test:
  #   runs-on: self-hosted
  #   needs: setup
  #   steps:
  #     - name: Run Tests
  #       run: very_good test -j ${{inputs.concurrency}} ${{(inputs.test_recursion && '--recursive') || ''}} ${{(inputs.test_optimization && '--optimization') || '--no-optimization'}} --coverage --test-randomize-ordering-seed random

  build:
    strategy:
      fail-fast: true
      matrix:
        include:
          # - build: apk
          #   environment: development
          # - build: apk
          #   environment: staging
          # - build: appbundle
          #   environment: development
          - build: appbundle
            environment: staging
          # - build: appbundle
          #   environment: production
          # - build: ipa
          #   environment: development
          - build: ipa
            environment: staging
          # - build: ipa
          #   environment: production
    # runs-on: self-hosted
    runs-on: ${{ matrix.build == 'ipa' && 'self-hosted-macos' || 'self-hosted' }}
    environment: ${{ matrix.environment }}
    needs:
      - setup
      - analyze
      # - test
    steps:
      - name: Print setup outputs
        run: echo "${{ toJSON(needs.setup.outputs) }}"
      - name: Setup jdk
        uses: actions/setup-java@v3
        with:
          distribution: ${{ needs.setup.outputs.jdk-dist }}
          java-version: ${{ needs.setup.outputs.jdk-version }}
      - name: Setup android sdk
        uses: android-actions/setup-android@v2
      - id: flutter-sdk-setup
        name: Setup flutter sdk
        uses: ./.github/actions/setup-flutter
        with:
          flutter-channel: ${{ needs.setup.outputs.flutter-channel }}
          flutter-version: ${{ needs.setup.outputs.flutter-version }}
      - name: Build ${{ matrix.environment }} ${{ matrix.build }}
        run: |
          flutter build ${{ matrix.build }} \
          --flavor ${{ matrix.environment }} \
          --obfuscate \
          --split-debug-info=debug_info \
          --dart-define=MONGODB_USERNAME=${{secrets.MONGODB_USERNAME}} \
          --dart-define=MONGODB_PASSWORD=${{secrets.MONGODB_PASSWORD}} \
          --dart-define=MAPBOX_TOKEN=${{secrets.MAPBOX_TOKEN}} \
          --dart-define=DEEPLINK_CHECKSUM=${{secrets.DEEPLINK_CHECKSUM}} \
          --dart-define=ONE_SIGNAL_APP_ID=${{secrets.ONE_SIGNAL_APP_ID}} \
      - name: Upload ${{ matrix.environment }} ${{ matrix.build }} artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.environment }}-${{ matrix.build }}
          path: |
            ${{ github.workspace }}/build/app/outputs/bundle/${{ matrix.environment }}Release/app-${{ matrix.environment }}-release.aab
            ${{ github.workspace }}/build/app/outputs/flutter-apk/app-${{ matrix.environment }}-release.apk
            ${{ github.workspace }}build/ios/ipa/*.ipa
          if-no-files-found: error

  deploy:
    strategy:
      fail-fast: true
      matrix:
        include:
          # - build: apk
          #   environment: development
          # - build: apk
          #   environment: staging
          # - build: appbundle
          #   environment: development
          - build: appbundle
            environment: staging
          # - build: appbundle
          #   environment: production
          # - build: ipa
          #   environment: development
          - build: ipa
            environment: staging
          # - build: ipa
          #   environment: production
    runs-on: ${{ matrix.build == 'ipa' && 'self-hosted-macos' || 'self-hosted' }}
    environment: ${{ matrix.environment }}
    needs:
      - build
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: ${{ matrix.environment }}-${{ matrix.build }}
      - if: ${{ matrix.environment == 'development' || matrix.environment == 'staging' }}
        name: Print artifact name
        run: echo "${{ matrix.environment }}-${{ matrix.build }}"
# with:
#   coverage_excludes: "*.g.dart *.freezed.dart"
#   flutter-channel: beta
#   flutter-version: 3.1.0
#   runs_on: self-hosted

# build/app/outputs/bundle/release/app-release.aab
# build/app/outputs/bundle/developmentRelease/app-development-release.aab
# build/app/outputs/bundle/stagingRelease/app-staging-release.aab
# build/app/outputs/bundle/productionRelease/app-production-release.aab
# build/app/outputs/flutter-apk/app-release.apk
# build/app/outputs/flutter-apk/app-development-release.apk
# build/app/outputs/flutter-apk/app-staging-release.apk
# build/app/outputs/flutter-apk/app-production-release.apk
# build/ios/archive/Runner.xcarchive
# build/ios/ipa/*.ipa

name: github_actions
on:
  push:
    branches:
      - master
      - develop
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment"
        type: environment
        required: true
      flutter_channel:
        description: "Flutter channel"
        type: choice
        default: stable
        required: false
        options:
          - master
          - beta
          - stable
      flutter_version:
        description: "Flutter version"
        type: string
        default: "3.3.2"
        required: false
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      flutter_channel:
        required: false
        type: string
        default: "stable"
      flutter_version:
        required: false
        type: string
        default: "3.3.2"

env:
  DART_DEFINED_VAR1: "var1"
  DART_DEFINED_VAR2: "var2"

jobs:
  setup:
    runs-on: self-hosted
    environment: staging
    # outputs:
    #   sdk_path: ${{ steps.flutter-sdk-setup.outputs.cache-keys }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Print env
        run: echo '${{ toJSON(env) }}'
      - name: Print secrets
        run: echo '${{ toJSON(secrets) }}'
      - id: parse-var
        run: |
          version="${{ inputs.flutter_version || '3.3.2' }}"
          channel="${{ inputs.flutter_channel || 'stable' }}"

          echo "::set-output name=version::$version"
          echo "::set-output name=channel::$channel"

          echo $version
          echo $channel

          cache_key=$(echo "flutter-${{ runner.os }}-$channel-$version-${{ runner.arch }}" | awk "{print tolower($0)}")
          cache_path=$(echo "${{ runner.tool_cache }}/flutter/channel-$version-${{ runner.arch }}" | awk "{print tolower($0)}")

          echo $cache_key
          echo $cache_path

          echo "::set-output name=cache-key::$cache_key"
          echo "::set-output name=cache-path::$cache_path"
        shell: bash
      - name: Print output variables
        run: echo "${{ toJSON(steps.parse-var.outputs) }}"
      # start setup action
      # - name: Setup jdk
      #   uses: actions/setup-java@v3
      #   with:
      #     distribution: "adopt"
      #     java-version: "11"
      # - name: Setup android sdk
      #   uses: android-actions/setup-android@v2
      # - id: flutter-sdk-setup
      #   name: Setup flutter sdk
      #   uses: subosito/flutter-action@v2
      #   with:
      #     channel: ${{ inputs.flutter_channel }}
      #     flutter-version: ${{ inputs.flutter_version }}
      #     cache: true
      #     cache-key: "flutter-${{ runner.os }}-${{ inputs.flutter_channel }}-${{inputs.flutter_version }}-${{ runner.arch }}"
      #     cache-path: "${{ runner.tool_cache }}/flutter/${{ inputs.flutter_channel }}-${{inputs.flutter_version }}-${{ runner.arch }}"
      # - name: Install dependencies
      #   run: |
      #     flutter pub global activate very_good_cli
      #     very_good --analytics false
      #     very_good packages get --recursive
      #   shell: bash
      # # end setup action
      # - name: Check flutter sdk
      #   run: flutter doctor

  analyze:
    runs-on: self-hosted
    needs: setup
    steps:
      - name: Print outputs
        run: echo ${{needs.setup.outputs.sdk_path}}
      # - name: Setup flutter
      #   uses: ./.github/actions/setup-flutter
      - name: Check formatting
        # run: flutter format --set-exit-if-changed lib test
        run: flutter format lib test
      # - name: Analyze
      #   run: flutter analyze lib test

  # test:
  #   runs-on: self-hosted
  #   needs: setup
  #   steps:
  #     - name: Run Tests
  #       run: very_good test -j ${{inputs.concurrency}} ${{(inputs.test_recursion && '--recursive') || ''}} ${{(inputs.test_optimization && '--optimization') || '--no-optimization'}} --coverage --test-randomize-ordering-seed random

  # build:
  #   runs-on: self-hosted
  #   environment: inputs.environment
  #   needs:
  #     - setup
  #     - analyze
  #     # - test
  #   steps:
  #     - name: Setup flutter
  #       uses: ./.github/actions/setup-flutter
  #     - name: Build appbundle
  #       run: |
  #         flutter build appbundle \
  #         --flavor staging \
  #         --obfuscate \
  #         --split-debug-info=debug_info \
  #         --dart-define=MONGODB_USERNAME={{secrets.MONGODB_USERNAME}} \
  #         --dart-define=MONGODB_PASSWORD={{secrets.MONGODB_PASSWORD}} \
  #         --dart-define=MAPBOX_TOKEN={{secrets.MAPBOX_TOKEN}} \
  #         --dart-define=DEEPLINK_CHECKSUM={{secrets.DEEPLINK_CHECKSUM}} \
  #         --dart-define=ONE_SIGNAL_APP_ID={{secrets.ONE_SIGNAL_APP_ID}} \
# with:
#   coverage_excludes: "*.g.dart *.freezed.dart"
#   flutter_channel: beta
#   flutter_version: 3.1.0
#   runs_on: self-hosted
#

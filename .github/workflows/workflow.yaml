name: github_actions
on:
  push:
    branches:
      - master
      - develop
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment"
        type: environment
        required: true
      flutter-channel:
        description: "Flutter channel"
        type: choice
        default: stable
        required: false
        options:
          - master
          - beta
          - stable
      flutter-version:
        description: "Flutter version"
        type: string
        default: "3.3.2"
        required: false
      jdk-dist:
        description: "JDK distribution"
        required: false
        default: "adopt"
      jdk-version:
        description: "JDK version"
        required: false
        default: "11"
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      flutter-channel:
        required: false
        type: string
        default: "stable"
      flutter-version:
        required: false
        type: string
        default: "3.3.2"
      jdk-dist:
        required: false
        type: string
        default: "adopt"
      jdk-version:
        required: false
        type: string
        default: "11"

jobs:
  setup:
    runs-on: self-hosted
    outputs:
      flutter-channel: ${{ steps.parse-var.outputs.flutter-channel }}
      flutter-version: ${{ steps.parse-var.outputs.flutter-version }}
    steps:
      - name: Print env
        run: echo "${{ toJSON(env) }}"
      - name: Print secrets
        run: echo "${{ toJSON(secrets) }}"
      - name: Checkout
        uses: actions/checkout@v3
      - id: parse-var
        name: Parse variables
        run: |
          flutter_channel="${{ inputs.flutter-channel || 'stable' }}"
          flutter_version="${{ inputs.flutter-version || '3.3.2' }}"
          jdk_dist="${{ inputs.jdk-dist || 'adopt' }}"
          jdk_version="${{ inputs.jdk-version || '11' }}"

          echo "::set-output name=flutter-channel::$flutter_channel"
          echo "::set-output name=flutter-version::$flutter_version"
          echo "::set-output name=jdk-dist::$jdk_dist"
          echo "::set-output name=jdk-version::$jdk_version"

          echo $flutter_channel
          echo $flutter_version
          echo $jdk_dist
          echo $jdk_version
        shell: bash
      - name: Print parse-var variables
        run: echo "${{ toJSON(steps.parse-var.outputs) }}"

  analyze:
    runs-on: self-hosted
    needs: setup
    steps:
      - name: Print setup outputs
        run: echo "${{ toJSON(needs.setup.outputs) }}"
      - id: flutter-sdk-setup
        name: Setup flutter sdk
        uses: ./.github/actions/setup-flutter
        with:
          flutter-channel: needs.setup.outputs.flutter-channel
          flutter-version: needs.setup.outputs.flutter-version
      - name: Check formatting
        # run: flutter format --set-exit-if-changed lib test
        run: flutter format lib test
      - name: Analyze
        run: flutter analyze lib test

  # test:
  #   runs-on: self-hosted
  #   needs: setup
  #   steps:
  #     - name: Run Tests
  #       run: very_good test -j ${{inputs.concurrency}} ${{(inputs.test_recursion && '--recursive') || ''}} ${{(inputs.test_optimization && '--optimization') || '--no-optimization'}} --coverage --test-randomize-ordering-seed random

  # build:
  #   runs-on: self-hosted
  #   # environment: inputs.environment
  #   needs:
  #     - setup
  #     - analyze
  #     # - test
  #   steps:
  #     - name: Print setup outputs
  #       run: echo ${{ toJSON(needs.setup.outputs) }}
  #     - name: Setup jdk
  #       uses: actions/setup-java@v3
  #       with:
  #         distribution: ${{ needs.setup.outputs.jdk-dist }}
  #         java-version: ${{ needs.setup.outputs.jdk-version }}
  #     - name: Setup android SDK
  #       uses: android-actions/setup-android@v2
  #     - name: Build appbundle
  #       run: |
  #         flutter build appbundle \
  #         --flavor staging \
  #         --obfuscate \
  #         --split-debug-info=debug_info \
  #         --dart-define=MONGODB_USERNAME={{secrets.MONGODB_USERNAME}} \
  #         --dart-define=MONGODB_PASSWORD={{secrets.MONGODB_PASSWORD}} \
  #         --dart-define=MAPBOX_TOKEN={{secrets.MAPBOX_TOKEN}} \
  #         --dart-define=DEEPLINK_CHECKSUM={{secrets.DEEPLINK_CHECKSUM}} \
  #         --dart-define=ONE_SIGNAL_APP_ID={{secrets.ONE_SIGNAL_APP_ID}} \
# with:
#   coverage_excludes: "*.g.dart *.freezed.dart"
#   flutter-channel: beta
#   flutter-version: 3.1.0
#   runs_on: self-hosted
#
